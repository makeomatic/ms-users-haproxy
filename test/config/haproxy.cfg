global
  setenv CONSUL_ADDR consul:8500
  setenv CONSUL_SYNC_INTERVAL 1
  setenv JWT_JWKS_FILE /usr/local/etc/haproxy/keys.json
  setenv JWT_SYNC_INTERVAL 400

  lua-load /usr/local/etc/haproxy-tracer.lua
  lua-load /usr/local/lib/lua/5.3/verify-jwt.lua

defaults
  log global
  mode http
  option httplog
  option dontlognull
  timeout connect 5000
  timeout client 50000
  timeout server 50000

listen stats
  mode http
  bind *:8081
  stats enable
  stats uri /

listen fe_main
  bind :8080
  http-request lua.verify-jwt
  http-request use-service lua.header-tracer

listen fe_second
  bind :8082

  http-request set-var(txn.bearer) req.hdr(authorization),word(2,' ')
  http-request set-var(txn.jwt_alg) var(txn.bearer),jwt_header_query('$.alg')

  http-request set-header x-jwt-token %[var(txn.bearer)]
  http-request set-header x-jwt-alg %[var(txn.jwt_alg)]

  http-request set-header x-jwt-verify-RS256 %[var(txn.bearer),jwt_verify(txn.jwt_alg,"/usr/local/etc/haproxy-keys/rsa-public.pem")]  if { var(txn.jwt_alg) -m str "RS256" }
  http-request set-header x-jwt-verify-HS256 %[var(txn.bearer),jwt_verify(txn.jwt_alg,"i-hope-that-you-change-this-long-default-secret-in-your-app")]  if { var(txn.jwt_alg) -m str "HS256" }

  http-request use-service lua.header-tracer
